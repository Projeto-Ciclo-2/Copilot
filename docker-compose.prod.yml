name: enigmus
services:
    postgres:
        image: postgres:latest
        ports:
            - "5432:5432"
        restart: always
        environment:
            POSTGRES_DB: copilot
            POSTGRES_USER: copilot
            POSTGRES_PASSWORD: copilotPass123
        networks:
            - copilot-network
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "copilot"]
            interval: 10s
            retries: 5

    redis:
        image: redis:latest
        ports:
            - "6379:6379"
        restart: always
        networks:
            - copilot-network
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            retries: 5

    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile.dev
        depends_on:
            - postgres
            - redis
        ports:
            - "5000:5000"
        command: >
            sh -c "npm run migrate && npm run dev"
        restart: always
        networks:
            - copilot-network
        volumes:
            - ./backend:/app

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile.dev
        depends_on:
            - backend
        command: npm run start
        restart: always
        ports:
            - "3000:3000"
        networks:
            - copilot-network

    nginx:
        depends_on:
            - frontend
        restart: always
        build:
            dockerfile: Dockerfile.prod
            context: ./nginx
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx:/etc/nginx/conf.d
            - ./nginx/certbot/conf:/etc/letsencrypt
            - ./nginx/certbot/www:/var/www/certbot
        networks:
            - copilot-network

    certbot:
        image: certbot/certbot
        volumes:
            - ./nginx/certbot/conf:/etc/letsencrypt
            - ./nginx/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h; done'"

volumes:
    postgres_data:

networks:
    copilot-network:
        driver: bridge
